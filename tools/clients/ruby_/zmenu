#!/home/tony/bin/ruby

require 'dataObject'

doi = ARGV[0]

class DataObject

  def to_menus

    debug = ARGV[1]

    depth = 0
    stack = []
    offset = 1
    menus = Array.new(@dataMap.length, 0); menus[1] = 1
    menuKey = ""

    hMenus = {} 
    aMenu = []
    props = []

    @dataMap.scan(/\S+/).each do |s|

      case s
        when "{", "[", "<"

          print "\"#{s}\": ", menus[1..16].join("_"), "\n" if debug
          print "\"#{s}\": ", menus[1..offset].join("_"), "\n"

          menuKey = menus[1..offset].join("_")

          props = []
          # hMenus[menuKey].each { |a| props << a; puts a } \
          hMenus[menuKey].each { |a| props << a } \
            if hMenus.key?(menuKey) and not hMenus[menuKey].empty?

          props << ["contains", "<i>rdf:Bag</i>"] if s == "{"
          props << ["contains", "<i>rdf:Seq</i>"] if s == "["
          props << ["contains", "<i>rdf:Alt</i>"] if s == "<"
          hMenus[menuKey] = props

          offset += 1; depth += 1; stack << depth

          menuKey = menus[1..offset].join("_")
          props = []
          hMenus[menuKey] = props
          print "\"#{s}\": ", menus[1..16].join("_"), "\n\n" if debug

        when "}", "]", ">"

          offset -= 1; stack.pop; depth = stack[-1]
          
          print "\"#{s}\": ", menus[1..16].join("_"), "\n" if debug
          print "\"#{s}\": ", menus[1..offset].join("_"), "\n"
          print "\"#{s}\": ", menus[1..16].join("_"), "\n\n" if debug

        when "("

          menus[offset] = depth; depth = menus[offset]

          print "\"#{s}\": ", menus[1..16].join("_"), "\n" if debug
          print "\"#{s}\": ", menus[1..offset].join("_"), "\n"

          menuKey = menus[1..offset].join("_")

          props = []
          hMenus[menuKey].each { |a| props << a } \
            if hMenus.key?(menuKey) and not hMenus[menuKey].empty?

          props << ["dataGroup", "<i>rdf:_#{menus[offset]}</i>"]
          hMenus[menuKey] = props

          offset += 1; menus[offset] += 1; stack << depth

          menuKey = menus[1..offset].join("_")
          props = []
          hMenus[menuKey] = props
          print "\"#{s}\": ", menus[1..16].join("_"), "\n\n" if debug

        when ")"
          
          print "\"#{s}\": ", menus[1..16].join("_"), "\n" if debug
          print "\"#{s}\": ", menus[1..offset].join("_"), "\n"
          
          menuKey = menus[1..offset].join("_")
          hMenus[menuKey] = props
          props = []

          offset -= 1; stack.pop; depth = stack[-1]
          print "\"#{s}\": ", menus[1..16].join("_"), "\n\n" if debug

        else

          depth += 1

          print "\"#{s}\": ", menus[1..16].join("_"), "\n" if debug
          print "\"#{s}\": ", menus[1..offset].join("_"), "\n"

          (type, data) = @dataObject[s.to_i]
          props << [type, data]
          print "\"#{s}\": ", menus[1..16].join("_"), "\n\n" if debug

      end

    end

    hMenus.sort.each do |keyProps, valProps|

      # next if valProps.empty?
      print "arMenu#{keyProps} = new Array("
      print "200,\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"," if keyProps == "1"
      print "\n"

      valProps.each do |key, val|

        case key

          when /resource/
            aMenu << "\"<b>[#{key}]</b> #{val}\", \"#{val}\", 0"

          when /relation|profile/
            aMenu << "\"<b>[#{key}]</b> #{val}\", \"http://www2.harcourt-international.com/ap/servlet/yads?doi=#{val}\", 0"

          when /contains|dataGroup/
            aMenu << "\"<b>[#{key}]</b> #{val}\", \"\", 1"

          else
            aMenu << "\"<b>[#{key}]</b> \\\"#{val}\\\"\", \"\", 0"

        end

      end

      print aMenu.join(",\n"); aMenu.clear
      print "\n)\n\n"

    end
 
  end

end

d = DataObject.get(doi).to_menus

__END__

    aFile = File.new("/opt/HARCap/servlets/doi/doi_menus.js")
    aFile.each { |line| print line }

    print <<EOT

<SCRIPT LANGUAGE="JavaScript1.2" TYPE="text/javascript">
<!--
if (isMenu) {
EOT
    
    print <<EOT
}
//--> </SCRIPT>
EOT

  end

end

sLine = "<body>\n"
        sLine << "This is <a href="
        sLine << "\"javascript:void(0)\" "
        sLine << "onMouseOver=\"popUp(\'elMenu1\',event)\" "
        sLine << "onMouseOut=\"popDown(\'elMenu1\')\" "
        sLine << "onClick=\"return false\""
        sLine << ">doi:#{doi}</a>."

print sLine
